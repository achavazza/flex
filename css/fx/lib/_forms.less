// main: ../fx.less

// - #
// --------------------------------
// Sets the width of the label on .form-horizontal;
// 1- @labelwidth
// 2- @labelSpan
// 3- @inputPadding
// 4- @inputSpacing
//
// ┌───── 1 ─────┬ 2 ┬───────── 100% ─────────┐
//                   ┌────────────────────────┐ ┐
//          Label    │ input                  │  3
//                   └────────────────────────┘ ┤
//                                               4
//                                              ┘
@colNum: 3;
@colTotal: 12;
@labelWidth      : 100% * (2 / 12);
//@labelWidth      : @elemWidth;   //1
@labelSpan       : @elemSpan;    //2
@inputPadding    : @elemPadding; //3
@inputPaddingX   : @elemPaddingX; //3
@inputPaddingY   : @elemPaddingY; //3
@inputSpacing    : @elemSpacing; //4
@inputBorder     : @elemBorder;
@inputRadius     : @elemRadius;
//@inputRadius     : 10px;

// #Default
// ======================================================================================================
.form-label,
.form-control,
.form-container{
    //box-sizing: border-box;
    //display:flex;
    //flex: 0 1 auto;
    //flex-direction: column;
    //flex-wrap: wrap;
    //padding-left:  @gutter;
    //padding-right: @gutter;

    //flex-basis: 100%;
    //text-algin: right;
}
.form {
    .form-group{
        //box-sizing: border-box;
        //display:flex;
        //flex-flow: column;
        //flex: 1 1 100%;

        //flex: 0 1 auto;
        //flex-direction: column;
        //flex-wrap: wrap;
        //margin-left:  -@gutter;
        //margin-right: -@gutter;

        margin-bottom: @inputSpacing;
    }
    .form-label{
        display:flex;
        padding-top: @inputPaddingY;
        padding-bottom: @inputPaddingY;
        //padding-top: @inputSpacing;
        //margin-bottom: @inputSpacing;
        flex: 1 1 100%;
        text-align: right;
    }

    //label,
    //legend{
    //    max-width: 100%;
    //}
    .input-group{
        display: flex;
        //flex-basis: 100%;
        flex: 1 1 100%;
        > *,
        > .form-control{
            flex: 1 1 100%;
            //flex-basis: 100%;
            border-radius: 0;
        }
        > *:first-child{
            border-top-left-radius: @inputRadius;
            border-bottom-left-radius: @inputRadius;
        }
        > *:last-child{
            border-top-right-radius: @inputRadius;
            border-bottom-right-radius: @inputRadius;
        }
        &-append{
            flex: 1;
        }
    }

    .form-control{
        //&:extend(.input-text);
        //.box-model(border-box);


        //display:flex;
        background: @bgBody;
        border: 1px solid @inputDefault;

        box-sizing: border-box;
        border-width: @inputBorder;
        //border-color: rgba(0, 0, 0, .1);
        border-radius: @inputRadius;

        padding: @inputPaddingY @inputPaddingX;
        margin: 0;

        vertical-align: middle;
        width: 100%;


        /*&:invalid{
            border-color: @brandDanger;
            box-shadow: 0 0 5px fade(@brandDanger,50%);
        }
        &:valid{
            border-color: @brandSuccess;
            box-shadow: 0 0 5px fade(@brandSuccess,50%);
        }*/
        &:focus{
            border-color: @brandAction;
            box-shadow: 0 0 5px fade(@brandAction,50%);
        }
    }
}
/*.form-group{
    &:extend(.row all);
}

// FIX
fieldset.form-group > .row {
    margin: 0;
}*/

// #Init
@media (min-width: @screen-sm){

    .form-horizontal {
        /*.form-label{
            padding-left: @gutter;
            padding-right: @gutter;
            text-align: right;
            .__col(2,12);
        }*/
        .form-container{
            padding: @inputPaddingX @inputPaddingY;
        }
        /*.input-group,
        .form-control,
        .form-container{
            .__col(10,12);
        }*/

        .form-group{
            //flex-flow: row;
        }
        fieldset.form-group{
            //position: relative;
            //margin-left: @labelWidth;
            //margin-bottom: @inputSpacing;
            //padding-left:@inputPaddingX;
            //padding-right:@inputPaddingX;
            //flex-flow: column;
        }
        .form-group legend{
            //position: absolute;
            //left: -@labelWidth;
            //top: -@inputPaddingY;
            //width: 100% * (@colNum / @colTotal);
            //flex-grow: 1;
            //flex-shrink: 1;
        }
        /*.input-group{
            .form-control{
                max-width: 100%;
                flex-basis: 100%;
            }
        }*/
        .input-group,
        .form-container,
        .form-control{
            //order: 2;
            //.__col((@colTotal - @colNum),@colTotal);
        }

        .form-label{
            //order: 1;
            //.__col(@colNum, @colTotal);
            //min-width: @labelWidth;
            //max-width: @labelWidth;
            //padding-right: @gutter;
            //padding-right: @labelSpan;
            //text-align: right;
        }

        //.form-container{
        .form-submit{
            //margin-left: 100% * (@colNum / @colTotal);
        }
    }
}


.form{
    input{
        &.error,
        &.danger  { border-color: @inputDangerBorder  !important; }
        &.success { border-color: @inputSuccessBorder !important; }
        &.warning { border-color: @inputWarningBorder !important; }
        //&.info    { border-color: @inputInfoBorder    !important; }
        //&.action  { border-color: @inputActionBorder  !important; }
        //&.alt     { border-color: @inputAltBorder     !important; }
        //&.inverse { border-color: @inputInverseBorder !important; }
    }
}
